CREATE DATABASE lms_db;

Create table LMS_MEMBERS(
MEMBER_ID Varchar(10) PRIMARY KEY,
MEMBER_NAME Varchar(30) ,
CITY Varchar(20) ,
DATE_REGISTER Date ,
DATE_EXPIRE Date ,
MEMBERSHIP_STATUS Varchar(15)
);

Create table LMS_SUPPLIERS_DETAILS(
SUPPLIER_ID Varchar(3) PRIMARY KEY,
SUPPLIER_NAME Varchar(30),
ADDRESS Varchar(50),
CONTACT Integer,
EMAIL Varchar(15)
);


Create table LMS_FINE_DETAILS(
FINE_RANGE Varchar(3) PRIMARY KEY,
FINE_AMOUNT decimal(10,2)
);


Create table LMS_BOOK_DETAILS(
BOOK_CODE Varchar(10) PRIMARY KEY, 
BOOK_TITLE Varchar(50) ,
CATEGORY Varchar(15) ,
AUTHOR Varchar(30) ,
PUBLICATION Varchar(30),
PUBLISH_DATE Date,
BOOK_EDITION Integer,
PRICE Decimal(8,2),
RACK_NUM Varchar(3),
DATE_ARRIVAL Date,  
SUPPLIER_ID Varchar(3) FOREIGN KEY References LMS_SUPPLIERS_DETAILS(SUPPLIER_ID)
);

Create table LMS_BOOK_ISSUE(
BOOK_ISSUE_NO integer PRIMARY KEY,
MEMBER_ID Varchar(10) FOREIGN KEY References LMS_MEMBERS(MEMBER_ID),
BOOK_CODE Varchar(10) FOREIGN KEY References LMS_BOOK_DETAILS(BOOK_CODE),
DATE_ISSUE Date ,
DATE_RETURN Date ,
DATE_RETURNED Date ,
FINE_RANGE Varchar(3) FOREIGN KEY References LMS_FINE_DETAILS(FINE_RANGE)
);

Insert into LMS_MEMBERS Values('LM001', 'AMIT', 'CHENNAI', '2012-02-12', '2013-02-11','Temporary');
Insert into LMS_MEMBERS Values('LM002', 'ABDHUL', 'DELHI', '2012-04-10', '2013-04-09','Temporary');
Insert into LMS_MEMBERS Values('LM003', 'GAYAN', 'CHENNAI', '2012-05-13','2013-05-12', 'Permanent');
Insert into LMS_MEMBERS Values('LM004', 'RADHA', 'CHENNAI', '2012-04-22', '2013-04-21', 'Temporary');
Insert into LMS_MEMBERS Values('LM005', 'GURU', 'BANGALORE', '2012-03-30', '2013-05-16','Temporary');
Insert into LMS_MEMBERS Values('LM006', 'MOHAN', 'CHENNAI', '2012-04-12', '2013-05-16','Temporary');

Insert into LMS_SUPPLIERS_DETAILS Values ('S01','SINGAPORE SHOPPEE', 'CHENNAI', 98941235,'sing@gmail.com');
Insert into LMS_SUPPLIERS_DETAILS Values ('S02','JK Stores', 'MUMBAI', 99401234,'jks@yahoo.com');
Insert into LMS_SUPPLIERS_DETAILS Values ('S03','ROSE BOOK STORE', 'TRIVANDRUM', 94444112,'rose@gmail.com');
Insert into LMS_SUPPLIERS_DETAILS Values ('S04','KAVARI STORE', 'DELHI', 86300014,'kavi@redif.com');
Insert into LMS_SUPPLIERS_DETAILS Values ('S05','EINSTEN BOOK GALLARY', 'US', 95420000,'eingal@aol.com');
Insert into LMS_SUPPLIERS_DETAILS Values ('S06','AKBAR STORE', 'MUMBAI',78556231,'akbakst@aol.com');

Insert into LMS_FINE_DETAILS Values('R0', 0);
Insert into LMS_FINE_DETAILS Values('R1', 20);
insert into LMS_FINE_DETAILS Values('R2', 50);
Insert into LMS_FINE_DETAILS Values('R3', 75);
Insert into LMS_FINE_DETAILS Values('R4', 100);
Insert into LMS_FINE_DETAILS Values('R5', 150);
Insert into LMS_FINE_DETAILS Values('R6', 200);

Insert into LMS_BOOK_DETAILS Values('BL000010', 'Java ForvDummies', 'JAVA', 'Paul J. Deitel', 'Prentice Hall', '1999-12-10', 6, 575.00, 'A1', '2011-05-10', 'S01');
Insert into LMS_BOOK_DETAILS Values('BL000002', 'Java: The Complete Reference ', 'JAVA', 'Herbert Schildt', 'Tata Mcgraw Hill ', '2011-10-10', 5, 750.00, 'A1', '2011-05-10', 'S03');
Insert into LMS_BOOK_DETAILS Values('BL000003', 'Java How To Do Program', 'JAVA', 'Paul J. Deitel', 'Prentice Hall', '1999-05-10', 6, 600.00, 'A1', '2012-05-10', 'S01');
Insert into LMS_BOOK_DETAILS Values('BL000004', 'Java: The Complete Reference ', 'JAVA', 'Herbert Schildt', 'Tata Mcgraw Hill ', '2011-10-10', 5, 750.00, 'A1', '2012-05-11', 'S01');
Insert into LMS_BOOK_DETAILS Values('BL000005', 'Java How To Do Program', 'JAVA', 'Paul J. Deitel', 'Prentice Hall', '1999-12-10', 6, 600.00, 'A1', '2012-05-11', 'S01');
Insert into LMS_BOOK_DETAILS Values('BL000006', 'Java: The Complete Reference ', 'JAVA', 'Herbert Schildt', 'Tata Mcgraw Hill ', '2011-10-10', 5, 750.00, 'A1', '2012-05-12', 'S03');
Insert into LMS_BOOK_DETAILS Values('BL000007', 'Let Us C', 'C', 'Yashavant Kanetkar ', 'BPB Publications', '2010-12-11', 9, 500.00 , 'A3', '2010-11-03', 'S03');
Insert into LMS_BOOK_DETAILS Values('BL000008', 'Let Us C', 'C', 'Yashavant Kanetkar ','BPB Publications', '2010-05-12', 9, 500.00 , 'A3', '2011-08-09', 'S04');
Insert into LMS_BOOK_DETAILS Values('BL000009', 'Let Us C#', 'C', 'Yashavant Kanetkar ','BPB Publications', '2010-05-12', 9, 550.00 , 'A3', '2011-08-09', 'S04');
Insert into LMS_BOOK_DETAILS Values('BL000011', 'Let Us C++', 'C', 'Yashavant Kanetkar ','BPB Publications', '2010-05-12', 9, 650.00 , 'A3', '2011-08-09', 'S04');

Insert into LMS_BOOK_ISSUE Values (1, 'LM001', 'BL000010', '2012-05-01', '2012-05-16', '2012-05-16', 'R0');
Insert into LMS_BOOK_ISSUE Values (2, 'LM002', 'BL000002', '2012-05-01', '2012-05-06','2012-05-16', 'R2');
Insert into LMS_BOOK_ISSUE Values (3, 'LM003', 'BL000007', '2012-04-01', '2012-04-16', '2012-04-20','R1');
Insert into LMS_BOOK_ISSUE Values (4, 'LM004', 'BL000005', '2012-04-01', '2012-04-16','2012-04-20', 'R1');
Insert into LMS_BOOK_ISSUE Values (5, 'LM005', 'BL000008', '2012-03-30', '2012-04-15','2012-04-20' , 'R1');
Insert into LMS_BOOK_ISSUE Values (6, 'LM005', 'BL000008', '2012-04-20', '2012-05-05','2012-05-05' , 'R0');
Insert into LMS_BOOK_ISSUE Values (7, 'LM003', 'BL000007', '2012-04-22', '2012-05-07','2012-05-25' , 'R4');


--(1) Write a command to describe the structure of the table, LMS_BOOK_DETAILS.
exec sp_help LMS_BOOK_DETAILS;

--(2) Write a query to select all the columns of LMS_FINE_DEATILS.	
SELECT * FROM LMS_FINE_DETAILS;

--(3) Write a query to select the name of the members who are living in Chennai.	
SELECT member_name FROM LMS_MEMBERS WHERE CITY='Chennai';

--(4) Write a query to display the member id, member name, city and membership status of those members who are having life time membership. HINT: Life time membership status is Permanent.	
select member_id,member_name,city,membership_status from LMS_MEMBERS where membership_status='permanent';

--(5) Write a query to display the member id, member name who have taken the book with book code 'BL000002'.
 select m.member_id,member_name,book_code from LMS_MEMBERS m,LMS_BOOK_ISSUE where book_code='BL000002';

--(6) Write a query to display the book code, book title and author of the books whose author name begins with 'P'.
 select book_code,book_title,author from LMS_BOOK_DETAILS where author like 'P%';

--(7) Write a query to display the total number of Java books available in library with alias name ‘NO_OF_BOOKS’.	
select COUNT(category) AS NO_OF_BOOKS from LMS_BOOK_DETAILS where category='JAVA';

--(8) Write a query to list the category and number of books in each category with alias name ‘NO_OF_BOOKS’.
select category,COUNT(category) AS NO_OF_BOOKS from LMS_BOOK_DETAILS group by category;

--(9) Write a query to display the number of books published by "Prentice Hall” with the alias name “NO_OF_BOOKS”.
select COUNT(publication) AS NO_OF_BOOKS from LMS_BOOK_DETAILS where publication='Prentice Hall';

--(10) Write a query to display the book code, book title of the books which are issued on the date "1st April 2012".	
select a.book_code,book_title from LMS_BOOK_ISSUE a inner join LMS_BOOK_DETAILS b
on a.BOOK_CODE=b.BOOK_CODE where date_issue='2012-04-01';

--(11) Write a query to display the member id, member name, date of registration and expiry date of the members 
  --whose membership expiry date is before APR 2013.	
select MEMBER_ID,MEMBER_NAME,DATE_REGISTER,DATE_EXPIRE from LMS_MEMBERS where DATE_EXPIRE < '2013-04-01';

--(12) Write a query to display the member id, member name, date of registration, membership status of the members 
   --who registered before "March 2012" and membership status is "Temporary".	
select MEMBER_ID,MEMBER_NAME,DATE_REGISTER,MEMBERSHIP_STATUS from LMS_MEMBERS 
where DATE_REGISTER < '2012-03-01' and MEMBERSHIP_STATUS='Temporary';

--(13) Write a query to display the member id, member name who’s city is Chennai or Delhi.
select MEMBER_ID,MEMBER_NAME from LMS_MEMBERS where CITY='chennai' or CITY='delhi';

--(14) Write a query to concatenate book title, author and display in the following format.Book_Title_is_written_by_Author	
select book_title + '_is_written_by_' + author from LMS_BOOK_DETAILS;

--(15) Write a query to display the average price of books which is belonging to ‘JAVA’ category with alias name “AVERAGEPRICE”.
select AVG(PRICE) as 'AVERAGEPRICE' from LMS_BOOK_DETAILS where CATEGORY='java';

--(16) Write a query to display the supplier id, supplier name and email of the suppliers who are all having gmail account.
select supplier_id,supplier_name,email from LMS_SUPPLIERS_DETAILS where email like '%gmail.com';

--(17) Write a query to display the supplier id, supplier name and contact details. Contact details can be either phone number 
  --or email or address with alias name “CONTACTDETAILS”. If phone number is null then display email, if email is also null then 
  --display the address of the supplier. Hint: Use Coalesce function.
select supplier_id,supplier_name,coalesce(contact,email,address) as contactdetails from LMS_SUPPLIERS_DETAILS; 

--(18) Write a query to display the member id, member name of the members, book code and book title of the books taken by them.
SELECT t1.MEMBER_ID,MEMBER_NAME,t2.BOOK_CODE,BOOK_TITLE FROM LMS_MEMBERS t1,LMS_BOOK_DETAILS t2,LMS_BOOK_ISSUE t3 
WHERE t1.MEMBER_ID=t3.MEMBER_ID AND t2.BOOK_CODE=t3.BOOK_CODE;

--(19) Write a query to display the member id, member name, fine range and fine amount of the members whose fine amount is less than 100.	
SELECT t2.MEMBER_ID,MEMBER_NAME,t1.FINE_RANGE,FINE_AMOUNT FROM LMS_FINE_DETAILS t1,LMS_MEMBERS t2,LMS_BOOK_ISSUE t3
WHERE  t2.MEMBER_ID=t3.MEMBER_ID AND t1.FINE_RANGE=t3.FINE_RANGE AND FINE_AMOUNT < 100;

--(20) Write a query to display the book code, book title and rack number of the books which are placed in rack 'A1' and sort by book title in ascending order.	
SELECT BOOK_CODE,BOOK_TITLE,RACK_NUM FROM LMS_BOOK_DETAILS where RACK_NUM='A1' ORDER BY BOOK_TITLE ASC;

--(21) Write a query to display the member id, member name and date of registration who have not taken any book.
SELECT MEMBER_ID,MEMBER_NAME,DATE_REGISTER FROM LMS_MEMBERS WHERE MEMBER_ID NOT IN (SELECT MEMBER_ID FROM LMS_BOOK_ISSUE);

--(22) Write a query to display the member id and member name of the members who has not paid any fine in the year 2012.
select t1.MEMBER_ID,t2.MEMBER_NAME from LMS_BOOK_ISSUE t1 join LMS_MEMBERS t2 
on t1.MEMBER_ID=t2.MEMBER_ID where t1.DATE_RETURN>=t1.DATE_RETURNED and YEAR(t1.DATE_RETURNED)=2012;

--(23) Write a query to display the rack number and the number of books in each rack with alias name “NOOFBOOKS” and sort by rack number in ascending order.
select RACK_NUM,COUNT(book_code) as NO_OF_BOOKS from LMS_BOOK_DETAILS group by RACK_NUM;

--(24) Write a query to display book issue number, member name, date or registration, date of expiry, book title, category author, price, date of issue, 
  --date of return, actual returned date, issue status, fine amount.
Select BOOK_ISSUE_NO,MEMBER_NAME,DATE_REGISTER,DATE_EXPIRE,BOOK_TITLE,CATEGORY, PRICE, DATE_ISSUE,DATE_RETURN,
DATE_RETURNED,'ISSUED' issue_status,(select FINE_AMOUNT from LMS_FINE_DETAILS t1 where t2.FINE_RANGE= t1.FINE_RANGE)as FINE_AMOUNT 
from LMS_BOOK_ISSUE t2,LMS_MEMBERS m,LMS_BOOK_DETAILS b where t2.MEMBER_ID=m.MEMBER_ID and b.BOOK_CODE=t2.BOOK_CODE;

--(25) Write a query to display the member id, member name and number of remaining books he/she can take with “REMAININGBOOKS” as alias
  --name. HINT: Assuming a member can take maximum 3 books.
SELECT t1.MEMBER_ID,MEMBER_NAME,3-COUNT(t1.MEMBER_ID) AS REMAININGBOOKS
FROM LMS_BOOK_ISSUE t1,LMS_MEMBERS t2 WHERE t2.MEMBER_ID=t1.MEMBER_ID
GROUP BY t1.MEMBER_ID,t2.MEMBER_NAME;


--(26) Write a query to display only the first three records of LMS_SUPPLIERS_DETAILS table.
SELECT TOP 3 * FROM LMS_SUPPLIERS_DETAILS;

--(27) Write a query to display the records of all suppliers excluding the first three suppliers.
SELECT * FROM LMS_SUPPLIERS_DETAILS WHERE SUPPLIER_ID NOT IN (SELECT TOP 3 SUPPLIER_ID FROM LMS_SUPPLIERS_DETAILS);

--(28) Write a query to rename the table LMS_MEMBERS to LMS_MEMBERS_DETAILS.
EXEC SP_RENAME 'LMS_MEMBERS','LMS_MEMBERS_DETAILS';

--(29) Write a query to delete all the rows of the table LMS_FINE_DETAILS. [Without DELETE command]	
TRUNCATE TABLE LMS_FINE_DETAILS;

--(30) Write a query to select all the name of the books. [Without Asterisk (*) Operator]
SELECT ALL BOOK_TITLE FROM LMS_BOOK_DETAILS;
