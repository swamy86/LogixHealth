


--SCALAR FUNCTIONS
--1
CREATE FUNCTION fn_TotalBooks()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT COUNT(*) FROM BOOKS)
END

PRINT dbo.fn_TotalBooks();


--2
CREATE FUNCTION fn_TotalBooks2(@min_price INTEGER)
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT COUNT(*) FROM BOOKS WHERE Price > @min_price)
END

PRINT dbo.fn_TotalBooks2(400);


--3
CREATE FUNCTION Function3()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT MAX(Price) FROM BOOKS)
END

PRINT dbo.Function3();


--4
CREATE FUNCTION Function4()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT MIN(Price) FROM BOOKS)
END

PRINT dbo.Function4();


--5
CREATE FUNCTION Function5()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT COUNT(DISTINCT(JOB)) FROM EMPLOYEE)
END

PRINT dbo.Function5();


--6
CREATE FUNCTION Function6()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT SUM(SAL) FROM EMPLOYEE)
END

PRINT dbo.Function6();


--7
CREATE FUNCTION Function7()
RETURNS DECIMAL(5,2)
AS
BEGIN
RETURN(SELECT ROUND(SUM(COMMISSION),1) FROM SALESMAN)
END

PRINT dbo.Function7();

--8
CREATE FUNCTION Function8()
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT AVG(SAL) FROM EMPLOYEE)
END

PRINT dbo.Function8();


--9
CREATE FUNCTION Function9(@DEPTNO INTEGER)
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT COUNT(*) FROM EMPLOYEE WHERE DEPT = @DEPTNO)
END

PRINT dbo.Function9(20);


--10
CREATE FUNCTION Function10(@DEPTNO INTEGER)
RETURNS INTEGER
AS
BEGIN
RETURN(SELECT SUM(SAL) FROM EMPLOYEE WHERE DEPT = @DEPTNO)
END

PRINT dbo.Function10(20);

--Inline Table Valued Functions
--1
CREATE FUNCTION fn_GetAllCustomerDetails()
RETURNS TABLE
AS
RETURN(SELECT * FROM CUSTOMER)

SELECT * FROM fn_GetAllCustomerDetails();


--2
CREATE FUNCTION fn_EmployeeDetails(@salary INTEGER)
RETURNS TABLE
AS
RETURN(SELECT * FROM EMPLOYEE WHERE SAL>@salary)

SELECT * FROM fn_EmployeeDetails(5000);


--3
CREATE FUNCTION Function13()
RETURNS TABLE
AS
RETURN(SELECT DISTINCT JOB FROM EMPLOYEE)

SELECT * FROM Function13();


--4
CREATE FUNCTION Function14()
RETURNS TABLE
AS
RETURN(SELECT BOOKS.*,Quantity_Issued FROM BOOKS JOIN ISSUED ON BOOKS.Book_Id = ISSUED.Book_Id
)

SELECT * FROM Function14();


--5
CREATE FUNCTION Function15()
RETURNS TABLE
AS
RETURN(SELECT MAX(SAL) AS MAXSALARY,DEPT FROM EMPLOYEE GROUP BY DEPT)


SELECT * FROM Function15();


--6
CREATE FUNCTION Function16()
RETURNS TABLE
AS
RETURN(SELECT MIN(SAL) AS MINSALARY,DEPT FROM EMPLOYEE GROUP BY DEPT)


SELECT * FROM Function16();


--7
CREATE FUNCTION Function17()
RETURNS TABLE
AS
RETURN(SELECT SUM(SAL) AS SALARY,DEPT FROM EMPLOYEE GROUP BY DEPT)


SELECT * FROM Function17();


--8
CREATE FUNCTION Function18()
RETURNS TABLE
AS
RETURN(SELECT AVG(SAL) AS SALARY,DEPT FROM EMPLOYEE GROUP BY DEPT)

SELECT * FROM Function18();

--9
CREATE FUNCTION Function19(@JOBNAME VARCHAR(10))
RETURNS TABLE
AS
RETURN(SELECT ENAME FROM EMPLOYEE WHERE JOB = @JOBNAME)

SELECT * FROM Function19('MANAGER');

--10
CREATE FUNCTION Function20()
RETURNS TABLE
AS
RETURN(SELECT ENAME FROM EMPLOYEE WHERE ENAME LIKE 's%')

SELECT * FROM Function20();



CREATE FUNCTION fn_GetAllBooksDetails()
RETURNS TABLE
AS
RETURN(SELECT * FROM Books)
SELECT * FROM fn_GetAllBooksDetails();

SELECT B.*,Quantity_Issued FROM fn_GetAllBooksDetails() AS B,ISSUED WHERE B.Book_Id = ISSUED.Book_Id
